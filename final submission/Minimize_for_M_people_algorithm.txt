Minimize the time for M no. of people:
i=0
while(i<N&&out>0)         
    if(arr[i]<M/N) then
        out=out-M/N-arr[i];
        if(out<N) then
            print M/N-arr[i]+out "People from remaining people enter to queue "i+1"\n";
            arr[i]=M/N;
            arr[i]+=out;"
        else
            print "M/N-arr[i] People enter to queue i+1\n";
            arr[i]=M/N;
    end if
    i=i+1
end while
rem=M%N
i=0
while(i<rem&&out>0)
    if(arr[i]<=M/N) then
        print M/N-arr[i] " People from remaining people enter to queue "i+1"\n";
        arr[i]=arr[i]+1
        out=out-1
    end if
    i=i+1
end while 
k=0;
switchs=0;
i=0
while(i<N)
    if((arr[i]>(M/N+1)&&rem!=0)||(arr[i]>M/N&&rem==0)) then
        switchs=arr[i]-M/N;
        arr[i]-=switchs;
        j=i+1
        while(j<N)
            if(arr[j]<M/N) then
                if(switchs<=((M/N)-arr[j])) then
                    arr[j]+=switchs;
                    cout<<switchs<<" People switch from queue "<<i+1<<" to queue "<<j+1<<"\n";
                    switchs=0;
                    break;
                else
                    switchs-=(M/N)-arr[j];
                    cout<<(M/N)-arr[j]<<" People switch from queue "<<i+1<<" to queue "<<j+1<<"\n";
                    arr[j]=M/N;
                    k=i;
            end if
        end while
    end if
    i=i+1
end while
i=0
while(i<N&&switchs>0)
    if(i!=k) then
        print "1 Person switch from queue " k+1 " to queue " i+1 "\n";
        ++arr[i];
        --switchs;
    end if
end while
print "After this Arrangement it will take " (p)*(M/N)+p*(rem!=0) " minutes to take all people into the stadium\n"








The time Complexity of this code is O(N^2).

Since the array is passed so auxilary space complexity is O(1).